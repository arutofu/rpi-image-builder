name: Modify Raspberry Pi OS Image

on:
  push: # Запуск действия при каждом пуше в репозиторий
    branches:
      - main
  release:
    types: [created]

jobs:
    modify-image:
        runs-on: ubuntu-latest # Использование последней версии Ubuntu для выполнения задач

        steps:
        - name: Checkout repository # Клонирование содержимого репозитория
          uses: actions/checkout@v3 # Использование действия для получения кода из репозитория

        - name: Spawn rpi image # Скачивание архива образа и распаковка 
          run: |
            wget https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-07-04/2024-07-04-raspios-bookworm-arm64-lite.img.xz
            xz -d *img.xz
            mv *img raspios.img

        - name: Install required packages # Установка необходимых утилит для работы с образом
          run: sudo apt-get update && sudo apt-get install -y qemu-utils qemu-user-static

        - name: Load nbd kernel module # Загрузка модуля ядра nbd
          run: sudo modprobe nbd max_part=8

        - name: Connect the image to nbd # Подключение образа к nbd устройству
          run: sudo qemu-nbd --connect=/dev/nbd0 --format=raw raspios.img

        - name: Mount the image partition # Монтирование раздела образа
          run: sudo mount /dev/nbd0p2 /mnt

        - name: Install openssh-server on image # Установка демона 
          run:
            sudo chroot /mnt sudo apt-get update && sudo apt-get install -y openssh-server
            #dont need sudo?

        - name: Setup ssh and create default user # подключение ssh и создание дефолтного пользователя. команда, использованная для шифрования пароля и вывода в консоль - echo 'raspberry' | openssl passwd -6 -stdin
          run: |
            ## Initialize username and password variables ##
            USERNAME="pi"
            PASSWORD="raspberry"

            ## Delete $USERNAME with his directory /home/$USERNAME if exist ##
            sudo chroot /mnt sudo userdel -r $USERNAME || echo "user $USERNAME doesn't exist"

            ## Create $USERNAME with $PASSWORD password ##
             sudo chroot /mnt sudo useradd -p $(echo $PASSWORD | openssl passwd -6 -stdin) -s /bin/bash -m $USERNAME || { echo "an error occured while creating $USERNAME"; exit 1; }
            
            ## Add $USERNAME to groups ##
            sudo chroot /mnt sudo usermod -aG sudo,adm,cdrom,users,input,render,gpio,i2c,spi $USERNAME 
              || { echo "an error occured while adding user to groups"; exit 1; }

            ## Enable ssh and login by password ##
            sudo chroot /mnt sh -c "sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config" 
              || { echo "an error occured while setup ssh"; exit 1; }
            sudo chroot /mnt sh -c "systemctl enable ssh" || { echo "an error occured while starting ssh";exit 1; }

            ## Create required dirs and gen ssh-key ##
            sudo chroot /mnt mkdir -p /run/sshd
            sudo chroot /mnt chmod 0755 /run/sshd
            sudo chroot /mnt ssh-keygen -A

            ## Run ssh ##
            sudo chroot /mnt /usr/sbin/sshd || { echo "an error occured while running ssh";exit 1; }

            ## Check list of users ##
            sudo chroot /mnt cat /etc/passwd
        
          # sudo chroot /mnt mkdir -p /boot/firmware
          # sudo chroot /mnt sh -c "echo 'pi:$6$4wZeqrrVWO9IPXdn$UjdB3q36d7AtE9AlW9xDarC05c6sXq1Vep470/Q6AOpATbhzsXqEDwo8tDNLORJNmXu5kmJb.wTalGBoEnpbU0' > /boot/firmware/userconf"
          # sudo chroot /mnt sh -c "echo 'pi ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/pi"
          # sudo chroot /mnt touch /boot/firmware/ssh
          # 
          # способ создания дефолт юзера путем добавления userconf файла в /boot/firmware с текстом 'user:encrypt_password',
          # не работает. насчет ssh непонятно. 

        - name: Check ssh file in /boot/firmware # проверка наличия файла 
          run: |
            if [ -f /mnt/boot/firmware/ssh ]; then
              echo "Файл ssh найден"
            else
              echo "Файл ssh не найден" >&2
              exit 1
            fi

        - name: Start and check sh service 
          run:  |
            sudo chroot /mnt service ssh start

            sudo chroot /mnt /usr/sbin/sshd -t || {
              echo "Не удалось запустить SSH" >&2
              exit 1
            }

        - name: Check for ip
          run: |
            IP_ADDRESS=$(sudo chroot /mnt hostname -I | awk '{print $1}')
            if [ -n "$IP_ADDRESS" ]; then
              echo "Адрес: pi@$IP_ADDRESS"
            else
              echo "Не удалось получить IP-адрес" >&2
              exit 1
            fi

        - name: Unmount the image partition # Демонтирование раздела образа
          run: sudo umount /mnt

        - name: Disconnect the image from nbd # Отключение образа от nbd устройства
          run: sudo qemu-nbd --disconnect /dev/nbd0

        - name: Compress image
          run: xz raspios.img

        - name: deploy img.xz
          uses: softprops/action-gh-release@v1
          if: ${{ github.event_name == 'release'}}
          with:
            files: raspios.img.xz
            prerelease: true
          env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}