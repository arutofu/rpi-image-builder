name: Modify Raspberry Pi OS Image

on:
  push: # Запуск действия при каждом пуше в репозиторий
    branches:
      - main
  release:
    types: [created]

jobs:
    modify-image:
        runs-on: ubuntu-latest # Использование последней версии Ubuntu для выполнения задач

        steps:
        - name: Checkout repository # Клонирование содержимого репозитория
          uses: actions/checkout@v3 # Использование действия для получения кода из репозитория

        - name: Spawn rpi image # Скачивание архива образа и распаковка 
          run: |
            wget https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-07-04/2024-07-04-raspios-bookworm-arm64-lite.img.xz
            xz -d *img.xz
            mv *img raspios.img

        - name: Install required packages # Установка необходимых утилит для работы с образом
          run: sudo apt-get update && sudo apt-get install -y qemu-utils qemu-user-static systemd-container

        - name: Load nbd kernel module # Загрузка модуля ядра nbd
          run: sudo modprobe nbd max_part=8

        - name: Connect the image to nbd # Подключение образа к nbd устройству
          run: sudo qemu-nbd --connect=/dev/nbd0 --format=raw raspios.img

        - name: Mount the image partition # Монтирование раздела образа
          run: sudo mount /dev/nbd0p2 /mnt

        # - name: Copy qemu tools to mounted image 
        #   run: |
        #     sudo cp /usr/bin/qemu-arm-static /mnt/usr/bin/
        #      if [ ! -f /usr/bin/qemu-arm-static ]; then
        #       echo "qemu-arm-static not found on host system!"
        #       exit 1
        #      fi
        #      sudo cp /usr/bin/qemu-arm-static /mnt/usr/bin/
        #      ls -l /mnt/usr/bin/qemu-arm-static
        #      if [ ! -f /mnt/usr/bin/qemu-arm-static ]; then
        #       echo "qemu-arm-static not found in the image!"
        #       exit 1
        #      fi
        #
        #  иногда не может выполнить ls -l /mnt/usr/bin/qemu-arm-static: нет директории

        # - name: Configurate image # Настройка образа 
        #   run: |
        #     sudo chroot /mnt raspi-config nonint do_wifi_ssid_passphrase myssid mypassphrase
        #     sudo chroot /mnt raspi-config nonint do_ssh 0
        #
        #   ошибка: fatal library error, lookup self
        #   System has not been booted with systemd as init system (PID 1). Can't operate. 

        - name: Setup ssh # подключение ssh и создание дефолтного пользователя. команда, использованная для шифрования пароля и вывода в консоль - echo 'raspberry' | openssl passwd -6 -stdin
          run: |
            # sudo chroot /mnt sudo userdel -r pi
            # sudo chroot /mnt sudo useradd -p $(perl -e 'print crypt($ARGV[0], "password")' raspberry) -s /bin/bash -G adm,cdrom,users,input,render,gpio,i2c,spi,sudo -m pi 
            sudo chroot /mnt mkdir -p /boot/firmware
            sudo chroot /mnt sh -c "echo 'pi:$6$4wZeqrrVWO9IPXdn$UjdB3q36d7AtE9AlW9xDarC05c6sXq1Vep470/Q6AOpATbhzsXqEDwo8tDNLORJNmXu5kmJb.wTalGBoEnpbU0' > /boot/firmware/userconf"
            sudo chroot /mnt sh -c "echo 'pi ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/pi"

            sudo chroot /mnt sh -c "sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config"
            sudo chroot /mnt sh -c "systemctl enable ssh"

            sudo chroot /mnt touch /boot/firmware/ssh
        
        - name: Check ssh file in /boot/firmware # проверка наличия файла 
          run: |
            if [ -f /mnt/boot/firmware/ssh ]; then
              echo "Файл ssh найден"
            else
              echo "Файл ssh не найден" >&2
              exit 1
            fi

        - name: Start and check sh service 
          run:  |
            sudo chroot -r /mnt service ssh start

            sudo chroot -r /mnt service ssh status || {
              echo "Не удалось запустить SSH" >&2
              exit 1
            }

        - name: Check for ip
          run: |
            IP_ADDRESS=$(sudo chroot /mnt hostname -I | awk '{print $1}')
            if [ -n "$IP_ADDRESS" ]; then
              echo "Адрес: pi@$IP_ADDRESS"
            else
              echo "Не удалось получить IP-адрес" >&2
              exit 1
            fi

        #   echo 'pi:$6$4wZeqrrVWO9IPXdn$UjdB3q36d7AtE9AlW9xDarC05c6sXq1Vep470/Q6AOpATbhzsXqEDwo8tDNLORJNmXu5kmJb.wTalGBoEnpbU0' > userconf
        #   sudo cp userconf /mnt/boot/firmware/userconf
        #   
        #   не работает
            
        #   sudo rm /mnt/etc/systemd/system/multi-user.target.wants/userconfig.service
        #   sudo systemctl enable getty@tty1
        #
        #   не завершается запуск, встает на Finished systemd-update-utmp-runlevel.service - Record Runlevel Change in UTMP

        - name: Unmount the image partition # Демонтирование раздела образа
          run: sudo umount /mnt

        - name: Disconnect the image from nbd # Отключение образа от nbd устройства
          run: sudo qemu-nbd --disconnect /dev/nbd0

        - name: Compress image
          run: xz raspios.img

        - name: deploy img.xz
          uses: softprops/action-gh-release@v1
          if: ${{ github.event_name == 'release'}}
          with:
            files: raspios.img.xz
            prerelease: true
          env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}